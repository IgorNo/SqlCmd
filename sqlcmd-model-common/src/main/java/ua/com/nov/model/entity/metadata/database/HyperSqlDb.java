package ua.com.nov.model.entity.metadata.database;

import ua.com.nov.model.entity.metadata.table.TableId;
import ua.com.nov.model.entity.metadata.table.metadata.TableMdId;
import ua.com.nov.model.entity.metadata.table.metadata.Column;
import ua.com.nov.model.statement.AbstractSqlDbStatements;
import ua.com.nov.model.statement.AbstractSqlTableStatements;
import ua.com.nov.model.statement.SqlStatementSource;

public class HyperSqlDb extends Database {
    private static final HyperDbSqlDbStmts DATABASE_SQL_STATEMENT_SOURCE = new HyperDbSqlDbStmts();
    private static final HyperSqlTableStmts TABLE_SQL_STATEMENT_SOURCE = new HyperSqlTableStmts();

    public HyperSqlDb(String dbUrl, String userName) {
        super(dbUrl, userName);
    }

    public HyperSqlDb(String dbUrl, String userName, String password) {
        super(dbUrl, userName, password);
    }

    public HyperSqlDb(String dbUrl, String userName, String password, String dbProperties) {
        super(dbUrl, userName, password, dbProperties);
    }

    @Override
    public String getAutoIncrementDefinition() {
        return " GENERATED BY DEFAULT AS IDENTITY";
    }

    @Override
    public HyperDbSqlDbStmts getDatabaseSqlStmtSource() {
        return DATABASE_SQL_STATEMENT_SOURCE;
    }

    @Override
    public HyperSqlTableStmts getTableSqlStmtSource() {
        return TABLE_SQL_STATEMENT_SOURCE;
    }

    @Override
    public SqlStatementSource<TableMdId, Column, TableId> getColumnSqlStmtSource() {
        return null;
    }

    @Override
    public String getFullTableName(TableId id) {
        StringBuilder result = new StringBuilder();
        if (id.getSchema() != null) result.append(id.getSchema()).append('.');
        return result.append(id.getName()).toString();
    }

    @Override
    public String convert(String parameter) {
        if (parameter != null) return parameter.toUpperCase();
        return parameter;
    }
    @Override
    public String getDbProperties() {
        return "";
    }

    private static class HyperDbSqlDbStmts extends AbstractSqlDbStatements {
        @Override
        public String getCreateStmt(Database db) {
           throw new UnsupportedOperationException();
        }

        @Override
        public String getDeleteStmt(DbId dbId) {
            throw new UnsupportedOperationException();
        }
    }

    private static class HyperSqlTableStmts extends AbstractSqlTableStatements {

    }
}
